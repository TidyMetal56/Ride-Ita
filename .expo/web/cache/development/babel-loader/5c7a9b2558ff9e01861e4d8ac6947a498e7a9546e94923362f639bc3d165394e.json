{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from 'native-base';\nimport { AntDesign } from '@expo/vector-icons';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function ChatScreen(_ref) {\n  var name = _ref.name,\n    avatar = _ref.avatar;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var handleSend = function handleSend() {\n    console.log(message);\n    setMessage('');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Image, {\n        style: styles.avatar,\n        source: {\n          uri: avatar\n        }\n      }), _jsx(View, {\n        style: styles.nameContainer,\n        children: _jsx(Text, {\n          style: styles.name,\n          children: name\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.chatContainer\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Type a message\",\n        value: message,\n        onChangeText: setMessage,\n        onSubmitEditing: handleSend,\n        returnKeyType: \"send\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: handleSend,\n        children: _jsx(AntDesign, {\n          name: \"arrowup\",\n          size: 24,\n          color: \"#fff\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  avatar: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 10\n  },\n  nameContainer: {\n    flex: 1\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  chatContainer: {\n    flex: 1,\n    padding: 10\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#ccc',\n    padding: 10\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderRadius: 20,\n    padding: 10,\n    marginRight: 10\n  },\n  sendButton: {\n    backgroundColor: 'blue',\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginLeft: 10\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Image","StyleSheet","Text","AntDesign","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","ChatScreen","_ref","name","avatar","_useState","_useState2","_slicedToArray","message","setMessage","handleSend","console","log","style","styles","container","children","header","source","uri","nameContainer","chatContainer","inputContainer","input","placeholder","value","onChangeText","onSubmitEditing","returnKeyType","sendButton","onPress","size","color","create","flex","backgroundColor","flexDirection","alignItems","padding","borderBottomWidth","borderBottomColor","width","height","borderRadius","marginRight","fontSize","fontWeight","borderTopWidth","borderTopColor","borderWidth","justifyContent","marginLeft"],"sources":["C:/Users/rodri/Desktop/9no/anotherITARIDE/Ride-Ita/src/screens/ChatScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Image, StyleSheet } from 'react-native';\r\nimport { Text } from 'native-base';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\nconst ChatScreen = ({ name, avatar }) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSend = () => {\r\n    console.log(message);\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Image style={styles.avatar} source={{ uri: avatar }} />\r\n        <View style={styles.nameContainer}>\r\n          <Text style={styles.name}>{name}</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.chatContainer}>\r\n        {/* Here goes the chat messages */}\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Type a message\"\r\n          value={message}\r\n          onChangeText={setMessage}\r\n          onSubmitEditing={handleSend}\r\n          returnKeyType=\"send\"\r\n        />\r\n        <TouchableOpacity style={styles.sendButton} onPress={handleSend}>\r\n          <AntDesign name=\"arrowup\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  avatar: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    marginRight: 10,\r\n  },\r\n  nameContainer: {\r\n    flex: 1,\r\n  },\r\n  name: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  chatContainer: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#ccc',\r\n    padding: 10,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    marginRight: 10,\r\n  },\r\n  sendButton: {\r\n    backgroundColor: 'blue',\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nexport default ChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}