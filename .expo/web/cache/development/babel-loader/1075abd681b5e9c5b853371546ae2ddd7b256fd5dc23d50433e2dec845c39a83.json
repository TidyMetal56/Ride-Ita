{"ast":null,"code":"import React from 'react';\nimport { FormControl, VStack, Box, HStack, Image, Center } from \"native-base\";\nimport SliderMap from \"../components/SliderMap\";\nimport SwitchButton from \"../components/SwitchButtonMap\";\nimport MapImage from \"../../assets/ImageMap.png\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport screen from \"../utils/screenNames\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RequestTripScreen = function RequestTripScreen(_ref) {\n  var navigation = _ref.navigation;\n  function onPressMapImage() {\n    navigation.navigate(screen.driver);\n  }\n  return _jsx(Center, {\n    alignSelf: 'center',\n    flex: 1,\n    width: '85%',\n    borderWidth: 1,\n    children: _jsxs(VStack, {\n      space: 1,\n      flex: 1,\n      alignItems: 'center',\n      width: '80%',\n      children: [_jsx(FormControl.Label, {\n        children: \"In range of\"\n      }), _jsx(SliderMap, {}), _jsxs(HStack, {\n        children: [_jsxs(Box, {\n          alignSelf: \"left\",\n          children: [_jsx(FormControl.Label, {\n            children: \"Show my location\"\n          }), _jsx(SwitchButton, {})]\n        }), _jsxs(Box, {\n          alignSelf: \"right\",\n          children: [_jsx(FormControl.Label, {\n            children: \"Need gas\"\n          }), _jsx(SwitchButton, {})]\n        })]\n      }), _jsx(Box, {\n        flex: 2,\n        borderWidth: 1,\n        width: '100%',\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: onPressMapImage,\n          flex: 1,\n          children: _jsx(Image, {\n            width: '100%',\n            height: '100%',\n            source: MapImage,\n            resizeMode: \"cover\",\n            flex: 1,\n            alt: 'Map Image'\n          })\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 10\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: 'transparent',\n    padding: 10\n  },\n  countContainer: {\n    alignItems: 'center',\n    padding: 10\n  }\n});\nexport default RequestTripScreen;","map":{"version":3,"names":["React","FormControl","VStack","Box","HStack","Image","Center","SliderMap","SwitchButton","MapImage","TouchableOpacity","screen","Pressable","StyleSheet","jsx","_jsx","jsxs","_jsxs","RequestTripScreen","_ref","navigation","onPressMapImage","navigate","driver","alignSelf","flex","width","borderWidth","children","space","alignItems","Label","style","styles","button","onPress","height","source","resizeMode","alt","create","container","justifyContent","paddingHorizontal","backgroundColor","padding","countContainer"],"sources":["C:/Users/rodri/Desktop/9no/anotherITARIDE/Ride-Ita/src/screens/RequestTripScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { FormControl, VStack, Box, HStack, Image, Center } from \"native-base\";\r\nimport SliderMap from '../components/SliderMap';\r\nimport SwitchButton from '../components/SwitchButtonMap';\r\nimport MapImage from '../../assets/ImageMap.png';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport screen from '../utils/screenNames';\r\nimport { Pressable } from 'react-native';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nconst RequestTripScreen = ({ navigation }) => {\r\n\r\n  function onPressMapImage() {\r\n    navigation.navigate(screen.driver)\r\n  }\r\n\r\n\r\n  return (\r\n    <Center\r\n      alignSelf={'center'}\r\n      flex={1} width={'85%'}\r\n      borderWidth={1}\r\n    >\r\n      <VStack space={1} flex={1} alignItems={'center'} width={'80%'}>\r\n        <FormControl.Label>In range of</FormControl.Label>\r\n        <SliderMap />\r\n\r\n\r\n        <HStack>\r\n          <Box alignSelf={\"left\"}>\r\n            <FormControl.Label>Show my location</FormControl.Label>\r\n            <SwitchButton />\r\n          </Box>\r\n          <Box alignSelf={\"right\"}>\r\n            <FormControl.Label>Need gas</FormControl.Label>\r\n            <SwitchButton />\r\n          </Box>\r\n        </HStack>\r\n\r\n        <Box flex={2} borderWidth={1} width={'100%'}>\r\n        <TouchableOpacity style={styles.button} onPress={onPressMapImage} flex={1} >\r\n            <Image\r\n              width={'100%'}\r\n              height={'100%'}\r\n              source={MapImage}\r\n              resizeMode=\"cover\"\r\n              flex={1}\r\n              alt={'Map Image'}\r\n            />\r\n          </TouchableOpacity>\r\n\r\n        </Box>\r\n      </VStack>\r\n    </Center>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: 'transparent',\r\n    padding: 10,\r\n  },\r\n  countContainer: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n});\r\n\r\n\r\nexport default RequestTripScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,aAAa;AAC7E,OAAOC,SAAS;AAChB,OAAOC,YAAY;AACnB,OAAOC,QAAQ;AAAkC,OAAAC,gBAAA;AAEjD,OAAOC,MAAM;AAA6B,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1C,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAErC,SAASC,eAAeA,CAAA,EAAG;IACzBD,UAAU,CAACE,QAAQ,CAACX,MAAM,CAACY,MAAM,CAAC;EACpC;EAGA,OACER,IAAA,CAACT,MAAM;IACLkB,SAAS,EAAE,QAAS;IACpBC,IAAI,EAAE,CAAE;IAACC,KAAK,EAAE,KAAM;IACtBC,WAAW,EAAE,CAAE;IAAAC,QAAA,EAEfX,KAAA,CAACf,MAAM;MAAC2B,KAAK,EAAE,CAAE;MAACJ,IAAI,EAAE,CAAE;MAACK,UAAU,EAAE,QAAS;MAACJ,KAAK,EAAE,KAAM;MAAAE,QAAA,GAC5Db,IAAA,CAACd,WAAW,CAAC8B,KAAK;QAAAH,QAAA,EAAC;MAAW,EAAoB,EAClDb,IAAA,CAACR,SAAS,KAAG,EAGbU,KAAA,CAACb,MAAM;QAAAwB,QAAA,GACLX,KAAA,CAACd,GAAG;UAACqB,SAAS,EAAE,MAAO;UAAAI,QAAA,GACrBb,IAAA,CAACd,WAAW,CAAC8B,KAAK;YAAAH,QAAA,EAAC;UAAgB,EAAoB,EACvDb,IAAA,CAACP,YAAY,KAAG;QAAA,EACZ,EACNS,KAAA,CAACd,GAAG;UAACqB,SAAS,EAAE,OAAQ;UAAAI,QAAA,GACtBb,IAAA,CAACd,WAAW,CAAC8B,KAAK;YAAAH,QAAA,EAAC;UAAQ,EAAoB,EAC/Cb,IAAA,CAACP,YAAY,KAAG;QAAA,EACZ;MAAA,EACC,EAETO,IAAA,CAACZ,GAAG;QAACsB,IAAI,EAAE,CAAE;QAACE,WAAW,EAAE,CAAE;QAACD,KAAK,EAAE,MAAO;QAAAE,QAAA,EAC5Cb,IAAA,CAACL,gBAAgB;UAACsB,KAAK,EAAEC,MAAM,CAACC,MAAO;UAACC,OAAO,EAAEd,eAAgB;UAACI,IAAI,EAAE,CAAE;UAAAG,QAAA,EACtEb,IAAA,CAACV,KAAK;YACJqB,KAAK,EAAE,MAAO;YACdU,MAAM,EAAE,MAAO;YACfC,MAAM,EAAE5B,QAAS;YACjB6B,UAAU,EAAC,OAAO;YAClBb,IAAI,EAAE,CAAE;YACRc,GAAG,EAAE;UAAY;QACjB;MACe,EAEf;IAAA;EACC,EACF;AAEb,CAAC;AAED,IAAMN,MAAM,GAAGpB,UAAU,CAAC2B,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACThB,IAAI,EAAE,CAAC;IACPiB,cAAc,EAAE,QAAQ;IACxBC,iBAAiB,EAAE;EACrB,CAAC;EACDT,MAAM,EAAE;IACNJ,UAAU,EAAE,QAAQ;IACpBc,eAAe,EAAE,aAAa;IAC9BC,OAAO,EAAE;EACX,CAAC;EACDC,cAAc,EAAE;IACdhB,UAAU,EAAE,QAAQ;IACpBe,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAGF,eAAe3B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}