{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button } from 'native-base';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport styles from \"../utils/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var settingsList = [{\n    name: 'Profile',\n    icon: 'person'\n  }, {\n    name: 'Account',\n    icon: 'key'\n  }, {\n    name: 'Language',\n    icon: 'globe'\n  }, {\n    name: 'Privacy',\n    icon: 'lock-closed'\n  }, {\n    name: 'Add Home',\n    icon: 'home'\n  }, {\n    name: 'Add Work',\n    icon: 'briefcase'\n  }];\n  var renderSettingItem = function renderSettingItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(Button, {\n      block: true,\n      transparent: true,\n      iconLeft: true,\n      style: styles.settingButton,\n      activeOpacity: 0.8,\n      children: [_jsx(Ionicons, {\n        name: item.icon,\n        style: styles.settingIcon\n      }), _jsx(Text, {\n        style: styles.settingText,\n        children: item.name\n      })]\n    });\n  };\n  return _jsx(View, {\n    style: styles.containerFlat,\n    children: _jsx(FlatList, {\n      data: settingsList,\n      renderItem: renderSettingItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      }\n    })\n  });\n};\nexport default SettingsScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","FlatList","Button","Ionicons","styles","jsx","_jsx","jsxs","_jsxs","SettingsScreen","settingsList","name","icon","renderSettingItem","_ref","item","block","transparent","iconLeft","style","settingButton","activeOpacity","children","settingIcon","settingText","containerFlat","data","renderItem","keyExtractor"],"sources":["C:/Users/rodri/Desktop/9no/anotherITARIDE/Ride-Ita/src/screens/SettingsScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, FlatList } from 'react-native';\r\nimport { Button } from 'native-base';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport styles from '../utils/styles';\r\n\r\n\r\nconst SettingsScreen = () => {\r\n\r\n  // Definir una lista de configuraciones con sus respectivos íconos\r\n  const settingsList = [\r\n    { name: 'Profile', icon: 'person' },\r\n    { name: 'Account', icon: 'key' },\r\n    { name: 'Language', icon: 'globe' },\r\n    { name: 'Privacy', icon: 'lock-closed' },\r\n    { name: 'Add Home', icon: 'home' },\r\n    { name: 'Add Work', icon: 'briefcase' }\r\n  ];\r\n\r\n  // Renderizar cada elemento de la lista como un botón\r\n  const renderSettingItem = ({ item }) => (\r\n    <Button \r\n      block \r\n      transparent \r\n      iconLeft \r\n      style={styles.settingButton} \r\n      activeOpacity={0.8} // Configurar la opacidad cuando el botón es seleccionado\r\n    >\r\n      <Ionicons name={item.icon} style={styles.settingIcon} />\r\n      <Text style={styles.settingText}>{item.name}</Text>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.containerFlat}>\r\n      <FlatList\r\n        data={settingsList}\r\n        renderItem={renderSettingItem}\r\n        keyExtractor={(item) => item.name}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nexport default SettingsScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAE1B,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAOC,QAAQ;AACf,OAAOC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAG3B,IAAMC,YAAY,GAAG,CACnB;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAS,CAAC,EACnC;IAAED,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAM,CAAC,EAChC;IAAED,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACnC;IAAED,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAc,CAAC,EACxC;IAAED,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAO,CAAC,EAClC;IAAED,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAY,CAAC,CACxC;EAGD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA;IAAA,IAAMC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAA,OAC/BP,KAAA,CAACN,MAAM;MACLc,KAAK;MACLC,WAAW;MACXC,QAAQ;MACRC,KAAK,EAAEf,MAAM,CAACgB,aAAc;MAC5BC,aAAa,EAAE,GAAI;MAAAC,QAAA,GAEnBhB,IAAA,CAACH,QAAQ;QAACQ,IAAI,EAAEI,IAAI,CAACH,IAAK;QAACO,KAAK,EAAEf,MAAM,CAACmB;MAAY,EAAG,EACxDjB,IAAA,CAACP,IAAI;QAACoB,KAAK,EAAEf,MAAM,CAACoB,WAAY;QAAAF,QAAA,EAAEP,IAAI,CAACJ;MAAI,EAAQ;IAAA,EAC5C;EAAA,CACV;EAED,OACEL,IAAA,CAACR,IAAI;IAACqB,KAAK,EAAEf,MAAM,CAACqB,aAAc;IAAAH,QAAA,EAChChB,IAAA,CAACL,QAAQ;MACPyB,IAAI,EAAEhB,YAAa;MACnBiB,UAAU,EAAEd,iBAAkB;MAC9Be,YAAY,EAAE,SAAAA,aAACb,IAAI;QAAA,OAAKA,IAAI,CAACJ,IAAI;MAAA;IAAC;EAClC,EACG;AAEX,CAAC;AAGD,eAAeF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}